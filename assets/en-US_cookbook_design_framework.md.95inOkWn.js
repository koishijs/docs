import{_ as o,k as t,m as a,j as s}from"./chunks/framework.CUOHyZ0k.js";const k=JSON.parse('{"title":"从元框架到框架","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/cookbook/design/framework.md","filePath":"en-US/cookbook/design/framework.md"}'),r={name:"en-US/cookbook/design/framework.md"};function i(l,e,c,n,d,p){return s(),t("div",null,e[0]||(e[0]=[a('<h1 id="从元框架到框架" tabindex="-1">从元框架到框架 <a class="header-anchor" href="#从元框架到框架" aria-label="Permalink to &quot;从元框架到框架&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>本文档尚未完成。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本文将回答以下问题：</p><ul><li>为什么说组合优于继承？</li><li>声明合并相比依赖注入有什么优势？</li><li>如何实现框架层面的继承和组合？</li></ul></div><p>上一篇文章中，我们留下了一个关于可组合性的伏笔——空间可组合性。本文将会从这个角度触发，解释「服务」这一概念是如何产生的，又是如何切实改善了框架的开发体验的。</p>',4)]))}const f=o(r,[["render",i]]);export{k as __pageData,f as default};
