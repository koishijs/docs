import{_ as r,k as e,m as o,j as t}from"./chunks/framework.CUOHyZ0k.js";const n=JSON.parse('{"title":"Du méta-framework au framework","description":"","frontmatter":{},"headers":[],"relativePath":"fr-FR/cookbook/design/framework.md","filePath":"fr-FR/cookbook/design/framework.md"}'),m={name:"fr-FR/cookbook/design/framework.md"};function s(i,a,l,c,k,f){return t(),e("div",null,a[0]||(a[0]=[o('<h1 id="du-meta-framework-au-framework" tabindex="-1">Du méta-framework au framework <a class="header-anchor" href="#du-meta-framework-au-framework" aria-label="Permalink to &quot;Du méta-framework au framework&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>本文档尚未完成。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本文将回答以下问题：</p><ul><li>为什么说组合优于继承？</li><li>声明合并相比依赖注入有什么优势？</li><li>如何实现框架层面的继承和组合？</li></ul></div><p>上一篇文章中，我们留下了一个关于可组合性的伏笔——空间可组合性。本文将会从这个角度触发，解释「服务」这一概念是如何产生的，又是如何切实改善了框架的开发体验的。</p>',4)]))}const u=r(m,[["render",s]]);export{n as __pageData,u as default};
