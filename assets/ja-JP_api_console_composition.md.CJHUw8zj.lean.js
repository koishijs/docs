import{_ as a,k as o,m as t,j as i}from"./chunks/framework.CUOHyZ0k.js";const h=JSON.parse('{"title":"组合式 API","description":"","frontmatter":{},"headers":[],"relativePath":"ja-JP/api/console/composition.md","filePath":"ja-JP/api/console/composition.md"}'),n={name:"ja-JP/api/console/composition.md"};function s(l,e,c,r,d,u){return i(),o("div",null,e[0]||(e[0]=[t('<h1 id="组合式-api" tabindex="-1">组合式 API <a class="header-anchor" href="#组合式-api" aria-label="Permalink to &quot;组合式 API&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>本节中所涉及的 API 都在 @koishijs/client 中导出。</p></div><h2 id="useconfig" tabindex="-1">useConfig() <a class="header-anchor" href="#useconfig" aria-label="Permalink to &quot;useConfig()&quot;">​</a></h2><ul><li>返回值: <code>Ref&lt;any&gt;</code></li></ul><p>获取用户设置。</p><h2 id="usecontext" tabindex="-1">useContext() <a class="header-anchor" href="#usecontext" aria-label="Permalink to &quot;useContext()&quot;">​</a></h2><ul><li>返回值: <a href="./context.html"><code>Context</code></a></li></ul><p>获取当前组件所在的插件上下文。</p><h2 id="usemenu" tabindex="-1">useMenu(id) <a class="header-anchor" href="#usemenu" aria-label="Permalink to &quot;useMenu(id)&quot;">​</a></h2><ul><li><strong>id:</strong> <code>string</code> 菜单标识符</li><li>返回值: <code>(el: HTMLElement, data: any) =&gt; void</code></li></ul><p>获得一个触发上下文菜单的事件监听器。</p>',11)]))}const m=a(n,[["render",s]]);export{h as __pageData,m as default};
