import{_ as a,k as r,m as i,j as t}from"./chunks/framework.CUOHyZ0k.js";const u=JSON.parse('{"title":"@koishijs/plugin-server-satori","description":"","frontmatter":{},"headers":[],"relativePath":"ja-JP/plugins/develop/server-satori.md","filePath":"ja-JP/plugins/develop/server-satori.md"}'),o={name:"ja-JP/plugins/develop/server-satori.md"};function s(l,e,n,h,p,c){return t(),r("div",null,e[0]||(e[0]=[i('<h1 id="koishijs-plugin-server-satori" tabindex="-1">@koishijs/plugin-server-satori <a class="header-anchor" href="#koishijs-plugin-server-satori" aria-label="Permalink to &quot;@koishijs/plugin-server-satori&quot;">​</a></h1><p>@koishijs/plugin-server-satori 实现了一个 <a href="https://satori.chat/" target="_blank" rel="noreferrer">Satori 协议</a> 的服务器。这个插件将允许你：</p><ul><li>通过 HTTP / WebSocket 访问当前 Koishi 实例中的机器人</li><li>配合 <a href="./../adapter/satori.html">Satori 适配器</a>，在另一个 Koishi 实例中完全控制当前实例中的机器人</li></ul><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><h3 id="config-path" tabindex="-1">config.path <a class="header-anchor" href="#config-path" aria-label="Permalink to &quot;config.path&quot;">​</a></h3><ul><li>类型: <code>string</code></li><li>默认值: <code>&#39;&#39;</code></li></ul><p>服务器监听的路径。</p>',7)]))}const f=a(o,[["render",s]]);export{u as __pageData,f as default};
